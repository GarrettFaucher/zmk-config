/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Define layer numbers

#define ___ &trans
#define BASE 0
#define GAME 1
#define MEDIA 2
#define NAV 3
#define MACRO 4
#define SYMBOL 5
#define NUM 6
#define FUNC 7

// ZMK includes

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            label = "hrm";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp ESCAPE  &kp Q        &kp W        &kp E             &kp R              &kp T            &kp Y             &kp U               &kp I         &kp O        &kp P           &kp DEL
&kp LCTRL   &hrm LGUI A  &hrm LALT S  &hrm LCTRL D      &hrm LEFT_SHIFT F  &kp G            &kp H             &hrm RIGHT_SHIFT J  &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMI  &kp SQT
&kp LSHFT   &kp Z        &kp X        &kp C             &kp V              &kp B            &kp N             &kp M               &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT
                                      &lt NUM LEFT_GUI  &lt NAV SPACE      &lt MACRO TAB    &lt SYMBOL ENTER  &lt NAV BACKSPACE   &lt FUNC DEL
            >;
        };

        media {
            label = "Media";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        nav {
            label = "Navigation";
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans        &kp LS(LC(Z))  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans
&trans  &trans     &trans     &trans     &trans     &caps_word    &caps_word     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans        &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
                              &trans     &trans     &trans        &trans         &trans     &trans
            >;
        };

        macro {
            label = "Macro";
            bindings = <
&bootloader  &bt BT_SEL 0        &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp LC(LS(ESCAPE))  &kp LS(LG(S))  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans              &trans         &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };

        symbol {
            label = "Symbol";
            bindings = <
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD    &kp AMPS   &kp UNDER   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &bootloader
&trans  &kp EXCL          &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH      &kp PIPE   &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans  &kp CARET         &kp SLASH      &kp STAR          &kp BACKSLASH      &kp UNDER     &kp TILDE  &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &trans
                                         &trans            &trans             &trans        &trans     &trans      &trans
            >;
        };

        number {
            label = "Number";
            bindings = <
&trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans    &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &trans
&kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans    &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
&kp ENTER     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &trans    &kp ENTER     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &trans
                                          &trans        &trans        &trans    &trans        &trans        &trans
            >;
        };

        function {
            label = "Function";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                         &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };
    };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Define layer numbers

#define BASE 0
#define MEDIA 1
#define NAV 2
#define MACRO 3
#define SYMBOL 4
#define NUM 5
#define FUNC 6
#define GAMING 7

// ZMK includes

#include <behaviors.dtsi>

// Personal includes

#include "includes/behaviours_homerow_mods.dtsi"
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.
        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;// repeat on tap-into-hold
            global-quick-tap-ms = <150>;// requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;// requires PR #1423
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;// requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;// requires PR #1423
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_LEFT";
            #binding-cells = <2>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;

            // global-quick-tap-ms = <150>;         // requires PR #1387

            hold-trigger-key-positions = <KEYS_R KEYS_T>;

            // hold-trigger-on-release;             // requires PR #1423
        };
        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_RIGHT";
            #binding-cells = <2>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;

            // global-quick-tap-ms = <150>;         // requires PR #1387

            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // hold-trigger-on-release;             // requires PR #1423
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <200>;
        };
        home_row: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&home_row TILDE ESC        &kp N1        &kp N2         &kp N3                    &kp N4         &kp N5                                              &kp N6                     &kp N7         &kp N8        &kp N9           &kp N0  &kp BACKSPACE
            &kp TAB         &kp Q         &kp W          &kp E                     &kp R          &kp T                                               &kp Y                      &kp U          &kp I         &kp O            &kp P        &kp DEL
          &kp LCTRL  &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_shift_l LEFT_SHIFT F          &kp G                                               &kp H  &hm_shift_r RIGHT_SHIFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r RGUI SEMI        &kp SQT
          &kp LSHFT         &kp Z         &kp X          &kp C                     &kp V          &kp B     &kp C_MUTE            &tog 7              &kp N                      &kp M      &kp COMMA       &kp DOT         &kp FSLH      &kp RSHFT
                                      &kp LCTRL       &kp LALT          &lt NUM LEFT_GUI  &lt NAV SPACE  &lt MACRO TAB  &lt SYMBOL ENTER  &lt NAV BACKSPACE               &lt FUNC DEL       &kp RALT     &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_DN>;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans                      &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                  &kp K_REDO  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
&trans  &trans  &trans  &trans  &trans  &caps_word                  &caps_word   &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans      &trans   &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &trans
                &trans  &trans  &trans      &trans  &trans  &trans      &trans     &trans     &trans     &trans
            >;
        };

        macro {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                  &trans  &trans  &trans  &trans  &trans  &trans
 &bl BL_TOG        &trans        &trans        &trans        &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans        &trans        &trans        &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans            &trans         &trans            &trans             &trans      &trans                     &trans      &trans                &trans                 &trans        &trans  &bootloader
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD                   &kp AMPS   &kp UNDER      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp PERCENT       &trans
&trans          &kp EXCL      &kp MINUS          &kp PLUS          &kp EQUAL    &kp HASH                   &kp PIPE   &kp COLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION       &trans
&trans         &kp CARET      &kp SLASH          &kp STAR      &kp BACKSLASH   &kp UNDER  &trans  &trans  &kp TILDE  &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT       &trans
                                 &trans            &trans             &trans      &trans  &trans  &trans     &trans      &trans                &trans                 &trans
            >;
        };

        number {
            bindings = <
      &trans        &kp F1        &kp F2        &kp F3        &kp F4  &kp F5                        &trans        &trans        &trans        &trans        &trans  &trans
      &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans                        &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9        &trans  &trans
&kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans                  &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
   &kp ENTER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp ENTER  &trans  &trans  &trans     &kp ENTER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp ENTER  &trans
                                  &trans        &trans        &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
            >;
        };

        function {
            bindings = <
&trans  &trans   &trans   &trans   &trans  &trans                  &trans  &trans   &trans   &trans   &trans  &trans
&trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans                  &trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans
&trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans                  &trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                 &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
            >;
        };

        gaming {
            bindings = <
  &trans  &trans  &trans  &trans  &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &kp TAB  &trans  &trans  &trans  &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&kp HOME   &kp A   &kp S   &kp D   &kp F     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &tog 7  &trans  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans   &mo 5  &kp SPACE  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
